import{r as t,o as p,c as o,a as n,b as a,w as e,F as l,e as i}from"./app.2bad79ab.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const u={},r=i(`<h1 id="plugin-level-settings" tabindex="-1"><a class="header-anchor" href="#plugin-level-settings" aria-hidden="true">#</a> Plugin-level Settings</h1><p>You can have settings on the plugin-level. This allows plugins to persist their own data, share data with other plugins or for the user to configure plugins (using the LipSurf options under the plugin&#39;s settings).</p><p>Example use cases:</p><ul><li>Search plugin that lets you choose a search engine.</li><li>Tabs and windows plugin that lets you choose the default URL for new tabs.</li></ul><p>A top-level plugin property determines settings:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>    <span class="token comment">// page to load on new tab and new window</span>
    <span class="token operator">...</span>
    settings<span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            name<span class="token operator">:</span> <span class="token string">&#39;New Tab/Window URL&#39;</span><span class="token punctuation">,</span>
            <span class="token comment">// determines the widget to use in the LipSurf options</span>
            type<span class="token operator">:</span> <span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span>
            <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;https://www.google.com&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Settings can be set or gotten within the plugin like so:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">await</span> PluginBase<span class="token punctuation">.</span><span class="token function">setPluginOption</span><span class="token punctuation">(</span><span class="token string">&#39;TabsAndWindows&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;New Tab/Window URL&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;www.duckduckgo.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
PluginBase<span class="token punctuation">.</span><span class="token function">getPluginOption</span><span class="token punctuation">(</span><span class="token string">&#39;TabsAndWindows&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;New Tab/Window URL&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>See also:</p>`,9),g=n("code",null,"setPluginOption",-1),d=n("code",null,"getPluginOption",-1);function k(b,m){const s=t("RouterLink");return p(),o(l,null,[r,n("ul",null,[n("li",null,[a(s,{to:"/api-reference/plugin.html#setpluginoption"},{default:e(()=>[g]),_:1})]),n("li",null,[a(s,{to:"/api-reference/plugin.html#getpluginoption"},{default:e(()=>[d]),_:1})])])],64)}var f=c(u,[["render",k]]);export{f as default};
